#include<stdio.h>

int minPath=0,foundMinPath=0;
int FindMinPath(int M, int N, int array[][M],int x, int y);

int main(){
    int T;
    scanf("%d",&T);
    while(T--){
        int N,M;
        scanf("%d%d",&N,&M);
        int array[N][M];
        for(int i=0;i<N;i++)
            for(int j=0;j<M;j++)
                scanf("%d",&array[i][j]);

        int x,y;
        scanf("%d%d",&x,&y);
        foundMinPath=0,minPath=0;
        if(array[0][0]==0)
            printf("-1\n");
        else
            FindMinPath(M, N, array, x, y);
        if(foundMinPath==0)
            printf("-1\n");
        else
            printf("%d\n",minPath);
    }
    return 0;
}

int FindMinPath(int M, int N, int array[][M], int x, int y){
    if(foundMinPath==1){
            return 0;
            }
     if(array[x][y]==0)
        return -1;
    if(x>y&&foundMinPath==0){
        printf("Go Up\n");
        int foundZero = FindMinPath(M,N,array,x-1,y);
        if(foundZero!=-1)
            minPath++;
        else{
            printf("Found Zero Upside\n");
            foundZero = FindMinPath(M,N,array,x,y-1);
            if(foundZero!=-1)
                minPath++;
            }
    }
    else if(y>x&&foundMinPath==0){
        printf("Go Left\n");
        int foundZero=FindMinPath(M,N,array,x,y-1);
        if(foundZero!=-1)
            minPath++;
        else{
            printf("Found Zero Leftside\n");
            foundZero = FindMinPath(M,N,array,x-1,y);
            if(foundZero!=-1)
                minPath++;
            }
        }
    else if(y==x&&x!=0&&foundMinPath==0){
        printf("Go Up\n");
        int foundZero=FindMinPath(M,N,array,x-1,y);
        if(foundZero!=-1)
            minPath++;
        else{
            printf("Found Zero Upside");
            foundZero = FindMinPath(M,N,array,x,y-1);
            if(foundZero!=-1)
                minPath++;
            }
        }
    else if(x==0&&y==0&&foundMinPath==0){
            foundMinPath=1;
        return 0;
    }
}
